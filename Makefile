# ====== ProPlus ‚Ä¢ Makefile (Pro+++) ======
# ‘ø’∏’∂÷Ü’´’£
APP            ?= proplus_app
PNG            ?= app/data_analytics/reports/finance_report.png
PDF            ?= app/data_analytics/reports/finance_report.pdf

# ====== ’ï’£’∂’°’Ø’°’∂’∂’•÷Ä
.PHONY: help ensure-up ensure-app wait-mongo add report shell logs ps up down rebuild clean

help:
	@echo "Targets:"
	@echo "  make add income=... debt=... savings=...   # ’£÷Ä’°’∂÷Å’∏÷Ç’¥ ’ß ’£÷Ä’°’º’∏÷Ç’¥’® MongoDB-’∏÷Ç’¥"
	@echo "  make report                                  # ’∂’Ø’°÷Ä + PDF ’∞’°’∑’æ’•’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂"
	@echo "  make shell                                   # ’¥’ø’∂’•’¨ app ’Ø’∏’∂’ø’•’µ’∂’•÷Ä"
	@echo "  make logs                                    # ÷Å’∏÷Ç’µ÷Å ’ø’°’¨ ’¨’∏’£’•÷Ä’®"
	@echo "  make ps|up|down|rebuild|clean                # docker ’Ø’°’º’°’æ’°÷Ä’∏÷Ç’¥"

# ‘µ’©’• compose ’π’´ ’°’∑’≠’°’ø’∏÷Ç’¥’ù ’¢’•÷Ä’∏÷Ç’¥ ’ß ’æ’•÷Ä÷á detached ’º’•’™’´’¥’∏’æ
ensure-up:
	@docker compose ps >/dev/null 2>&1 || (echo "‚öôÔ∏è docker compose not ready"; exit 1)
	@running=$$(docker compose ps -q $(APP)); \
	if [ -z "$$running" ]; then \
	  echo "üöÄ Starting containers..."; \
	  docker compose up -d; \
	fi

# ’ç’ø’∏÷Ç’£’∏÷Ç’¥ ’ß, ’∏÷Ä APP ’Ø’∏’∂’ø’•’µ’∂’•÷Ä’® ’°’º’Ø’° ’ß
ensure-app: ensure-up
	@docker compose ps $(APP) | grep -q $(APP) || (echo "‚ùå app container '$(APP)' not running"; exit 1)

# ’ç’∫’°’Ω’∏÷Ç’¥ ’ß Mongo-’´’∂ (’¥’´’∂’π÷á 20’æ)’ù ping-’∏’æ
wait-mongo: ensure-app
	@echo "‚è≥ Waiting for Mongo to be ready..."
	@for i in $$(seq 1 20); do \
	  docker exec -it $(APP) bash -lc "python - <<'PY'\nfrom pymongo import MongoClient,errors\nimport os,sys\nuri=os.getenv('MONGO_URI','mongodb://localhost:27017')\ntry:\n  c=MongoClient(uri, serverSelectionTimeoutMS=500)\n  c.admin.command('ping')\n  print('ok')\n  sys.exit(0)\nexcept errors.PyMongoError:\n  pass\nsys.exit(1)\nPY" >/dev/null 2>&1 && { echo "‚úÖ Mongo is up"; exit 0; } || sleep 1; \
	done; echo "‚ùå Mongo not ready"; exit 1

# ====== ‘≥’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä
add: ensure-app wait-mongo
	@if [ -z "$(income)" ] || [ -z "$(debt)" ] || [ -z "$(savings)" ]; then \
	  echo "‚ùå Usage: make add income=200000 debt=800000 savings=150000"; exit 2; fi
	@docker exec -it $(APP) bash -lc \
	  "python finance_tracker.py add --income $(income) --debt $(debt) --savings $(savings)"

report: ensure-app wait-mongo
	@docker exec -it $(APP) bash -lc "python finance_tracker.py plot && python generate_report.py"
	@echo "üìà PNG: $(PNG)"
	@echo "üìÑ PDF: $(PDF)"

shell: ensure-app
	@docker exec -it $(APP) bash

logs:
	@docker compose logs -f --tail=200 $(APP)

ps:
	@docker compose ps

up:
	@docker compose up -d

down:
	@docker compose down

rebuild:
	@docker compose down || true
	@docker compose build --no-cache
	@docker compose up -d

clean:
	@echo "üßπ Removing containers/images/volumes‚Ä¶"
	@docker compose down -v || true
	@docker system prune -af || true
